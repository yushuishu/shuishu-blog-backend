shuishu:
  file-path: D:/itlike/workSpace/Java/blog/files
  # 登录策略（默认ONE：com.shuishu.demo.security.common.config.security.LoginPolicyConfig.getLoginPolicy）
  # ONE: 达到最大客户端登录人数，将最早登录的客户端给踢掉
  # TWO: 达到最大客户端登录人数，不允许登录
  login-policy: TWO
  token:
    secret: spring_security_examples
    # 登录授权token名称，请求头名称
    auth-token: AuthToken
    # 记住我功能的token名称，请求头名称
    remember-me-token: RememberMeToken
    # auth-token 有效时间（秒） 1小时 = 1 * 60 * 60
    expire-time: 3600
    # refresh-token 有效时间（秒）： 30天 = 1 * 60 * 60 * 24 * 30
    remember-me-token-expire-time: 2592000
    # auth-token 距离过期时间 expire-time 还有多少秒，重新设置有效时间为 expire-time：5分钟 = 1 * 60 * 5
    surplus-refresh-time: 300
  init:
      user:
        nickname: Long
        user-auth-identifier: admin
        user-auth-credential: 123
        industry: 互联网/软件开发/java开发
        user-photo: https://github.com/yushuishu/images/blob/master/blog/666666.png?raw=true


server:
  port: 8081

spring:
  main:
    allow-bean-definition-overriding: true
  servlet:
    multipart:
      max-file-size: 1024MB
      max-request-size: 1024MB
  # 数据库
  datasource:
    url: jdbc:postgresql://127.0.0.1:5432/shuishu_blog?useUnicode=true&characterEncoding=utf8
    username: postgres
    password: 123456
    driver-class-name: org.postgresql.Driver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      connection-timeout: 60000
      idle-timeout: 500000
      max-lifetime: 540000
      maximum-pool-size: 20
      minimum-idle: 10
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQL95Dialect
        hbm2ddl:
          auto: update
        jdbc:
          lob:
            non_contextual_creation: true
        temp:
          use_jdbc_metadata_defaults: true
        # 解决 jpa in 语句QueryPlanCache导致的JVM内存溢出
        query:
          # 限制缓存大小
          plan_cache_max_size: 64
          # 限制元数据大小
          plan_parameter_metadata_max_size: 32
          # 增加 IN 子句查询命中率
          in_clause_parameter_padding: true
    show-sql: true
  data:
    #  redis
    redis:
      host: 127.0.0.1
      password: 123456
      port: 6379
      # Redis数据库索引（默认为 0）
      database: 0
      connect-timeout: 3000
  # 邮件发送配置
  mail:
    default-encoding: utf-8
    host: smtp.qq.com
    username: 2124929779@qq.com
    password:
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
  security:
    oauth2:
      client:
        registration:
          github:
            client-id: xxx
            client-secret: xxx
            redirect-uri: http://localhost:8081/oauth2/code/github

aj:
  captcha:
    cache-type: redis
    # 验证码类型default两种都实例化。
    type: default
    # 右下角水印文字
    water-mark: LongLongLong
    # 校验滑动拼图允许误差偏移量(默认5像素)
    slip-offset: 5
    # aes加密坐标开启或者禁用(true|false)
    aes-status: true
    # 滑动干扰项(0/1/2)
    interference-options: 2
    # 点选字体样式 默认Font.BOLD
    font-style: 1
    # 点选字体字体大小
    font-size: 25
    history-data-clear-enable: false
    # 接口请求次数一分钟限制是否开启 true|false
    req-frequency-limit-enable: false
    # 验证失败5次，get接口锁定
    req-get-lock-limit: 5
    # 验证失败后，锁定时间间隔,s
    req-get-lock-seconds: 360
    # get接口一分钟内请求数限制
    req-get-minute-limit: 30
    # check接口一分钟内请求数限制
    req-check-minute-limit: 60
    # verify接口一分钟内请求数限制
    req-verify-minute-limit: 60


